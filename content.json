{"pages":[],"posts":[{"title":"git推送遇到的问题","text":"github无法推送的原因 该分支与远程从分支无相关联系 123没给该分支设置上游远程节点 git branch --set-upstream-to=&lt;远程主机名&gt;/&lt;远程分支名&gt; &lt;本地分支名&gt;git的更新操作如果本地与远程大部分不一样，有合并冲突，需要先拉取合并，才能进行推送 本地分支名与远程分支名的特殊情况 1.本地分支名与远程分支名不同时候 12git push &lt;远程主机名&gt; &lt;本地分支名&gt;：&lt;远程分支名&gt; 若加-f 则强行本地覆盖 2.本地分支名和远程分支名相同时候如果远程分支被省略，如上则表示将本地分支推送到与之存在追踪关系的远程分支（通常两者同名），如果该远程分支不存在，则会被新建 1git push &lt;远程主机名&gt; &lt;本地分支名&gt; tip：省略本地分支名，则表示删除指定的远程分支 12git push origin ：&lt;远程分支名&gt; git push origin","link":"/2019/09/15/git推送遇到的问题/"},{"title":"Git的常用命令","text":"git上传常用命令的基本流程 12345git init //初始化git仓库git add . //将文件提交到暂存区git commit -m &apos;说明&apos;git remote add [本地自定义远程仓库名] [远程仓库url] //建立远程仓库git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt; 拉取并合并 12git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; git pull=git fetch +git merge 推送 12git push -u origin master //第一次将本地仓库推送到远程仓库git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt; 1总结: git pull/push &lt;远程主机名&gt; &lt;源地址&gt;:&lt;目的地址&gt; 1234567891011121314151617181920212223242526272829git ls-files //查看暂存区文件git diff //查看暂存区前后不同git branch 分支名 //创建新的分支git branch //查看分支git branch -r //查看远程的分支名git branch --set-upstream-to=&lt;远程主机名&gt;/&lt;远程分支名&gt; &lt;本地分支名&gt; //给该分支设置上游远程节点git checkout -b 分支名 //创建新的分支并切换过去git checkout 分支名 //切换到该分支git init //初始化git仓库git add 文件名 //提交该文件git add . //提交仓库所有文件git commit -m &quot;注释&quot; //提交暂存区的文件到版本库 git remote add [本地自定义远程仓库名] [远程仓库url] //建立远程仓库git clone &lt;远程仓库地址&gt; //克隆该仓库的默认分支git clone -b 分支名 &lt;远程仓库地址&gt; //克隆指定的分支","link":"/2019/09/15/git的常用命令/"}],"tags":[{"name":"Git","slug":"Git","link":"/tags/Git/"}],"categories":[{"name":"git","slug":"git","link":"/categories/git/"}]}